default:
  tags:
    - golang
stages:
  - build
  - deploy

variables:
  IMAGE_NAME: $GITLAB_GROUP/$CI_PROJECT_NAME:latest


build:
  stage: build
  only:
    - main
  image: docker:25.0.1
  services:
    - name: docker:25.0.1-dind
      alias: docker
  variables:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_TLS_CERTDIR: ""
      DOCKER_DRIVER: overlay2
  before_script: 
    - echo $PAT | docker login $CI_REGISTRY -u $GITLAB_USER_LOGIN --password-stdin
  script:
    - docker build -t $CI_REGISTRY/$IMAGE_NAME .
    - docker push $CI_REGISTRY/$IMAGE_NAME

deploy:
  image: alpine:latest
  stage: deploy
  only:
    - main
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config;
  - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
  - echo "$SSH_PUBLIC_KEY" | base64 -d > ~/.ssh/id_rsa.pub
  - chmod 600 ~/.ssh/id_rsa;
  - chmod 764 ~/.ssh/id_rsa.pub;
  - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

  script:
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "cd $WORK_DIR && docker-compose down && docker-compose pull && docker-compose up -d && exit"
  after_script:
    - rm -rf ~/.ssh
